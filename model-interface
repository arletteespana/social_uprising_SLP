$RecursionLimit = Infinity

Orbita[f_, x0_, n_] := 
  If[n == 0, {}, Join[{x0}, Orbita[f, f[x0], n - 1]]];

TodosCambiados[condicioninicial_, n_] := 
  Orbita[UnaCorrida[#] &, condicioninicial, n];

CuantosCiudadanos[list_] := Module[{ciudadanos},
   ciudadanos = list[[2]][[1]][[1]];
   Partition[
    Table[Length[
      Select[ciudadanos, #[[1]] == i && #[[2]] == 1 &]], {i, 1, 
      Length[list[[1]]]}], Sqrt[Length[list[[1]]]]]
   ];
   
CuantosPolicias[list_] := Module[{policias},
   policias = list[[2]][[1]][[2]];
   Partition[
    Table[Length[Select[policias, # == i &]], {i, 1, 
      Length[list[[1]]]}], Sqrt[Length[list[[1]]]]]
   ];
   
PromedioBeta[list_] := 
  Module[{ciudadanos, activos, promedios, activosformato},
   ciudadanos = list[[2]][[1]][[1]];
   activos = 
    Table[Select[ciudadanos, #[[1]] == i && #[[2]] == 1 &], {i, 
      Length[list[[1]]]}];
   If[Position[activos, {}] == {}, activosformato = activos, 
    activosformato = 
     ReplacePart[activos, Position[activos, {}] -> {{ 0, 0, 0}}]];
   promedios = Mean[#] & /@ activosformato;
   Partition[#[[3]] & /@ promedios, Sqrt[Length[list[[1]][[1]]]]]
   ];
   
VarianzaBeta[list_] := 
  Module[{ciudadanos, activos, varianzas, activosformato, formato},
   ciudadanos = list[[2]][[1]][[1]];
   activos = 
    Table[Select[ciudadanos, #[[1]] == i && #[[2]] == 1 &], {i, 
      Length[list[[1]]]}];
   If[Position[activos, {}] == {}, activosformato = activos, 
    activosformato = 
     ReplacePart[activos, 
      Position[activos, {}] -> {{ 0, 0, 0}, {0, 0, 0}}]];
   If[Position[Length[#] & /@ activosformato, 1] == {}, 
    formato = activosformato, 
    formato = 
     ReplacePart[activosformato, 
      Position[Length[#] & /@ activosformato, 
        1] -> {{ 0, 0, 0}, {0, 0, 0}}]];
   varianzas = Variance[#] & /@ formato;
   Partition[#[[3]] & /@ varianzas, Sqrt[Length[list[[1]][[1]]]] ]
   ];

Manipulate[Module[{dinam, arreglo},
  dinam = 
   Rest[CondicionInicial[Cuadrícula, NumCiudadanos, Fuente, 
     NumPolicías, Cuartel, Tipo, \[Tau]1, \[Tau]2, P, NumMáx]];
  arreglo = {MatrixPlot[CuantosCiudadanos[dinam[[Iteración]]], 
     PlotLegends -> Automatic, ColorFunction -> "ThermometerColors"] ,
     MatrixPlot[CuantosPolicias[dinam[[Iteración]]], 
     PlotLegends -> Automatic, ColorFunction -> "RedBlueTones"], 
    DiscretePlot[
     Total[Total[CuantosCiudadanos[dinam[[i]]]]]/NumCiudadanos, {i, 1,
       Iteración}, PlotRange -> {0, 1}],
    Total[Total[CuantosCiudadanos[dinam[[Iteración]]]]],
    MatrixPlot[PromedioBeta[dinam[[Iteración]]], 
     PlotLegends -> Automatic, ColorFunction -> "GrayYellowTones"], 
    MatrixPlot[VarianzaBeta[dinam[[Iteración]]], 
     PlotLegends -> Automatic, ColorFunction -> "GreenPinkTones"]};
  
  Flatten[
   Join[{If[Ciudadanos == 1, arreglo[[1]], {}], 
     If[Policias == 1, arreglo[[2]], {}], 
     If[TotalCiudadanos == 1, arreglo[[4]], {}], 
     If[AcumulaciónCiudadanos == 1, arreglo[[3]], {}], 
     If[Media == 1, arreglo[[5]], {}], 
     If[Varianza == 1, arreglo[[6]], {}]}]
   ]],
 {Ciudadanos, {0, 1}, Checkbox}, {Policias, {0, 1}, 
  Checkbox}, {TotalCiudadanos, {0, 1}, 
  Checkbox}, {AcumulaciónCiudadanos, {0, 1}, 
  Checkbox}, {Media, {0, 1}, Checkbox}, {Varianza, {0, 1}, 
  Checkbox}, {Cuadrícula, 3, InputField}, {NumCiudadanos, 100, 
  InputField}, {Target, 13, InputField}, {Fuente, 7, 
  InputField}, {NumPolicías, 5, InputField}, {Cuartel, 5, 
  InputField}, {Tipo, {1, 2, 3, 4}, RadioButton}, {\[Tau]1, 0.1, 
  InputField}, {\[Tau]2, 0.5, InputField}, {NumMáx, 3, 
  InputField}, {P, 0.3, InputField}, {Iteración, 2, 1000}]
